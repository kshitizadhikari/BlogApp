@model ViewPostVM
@{
    var user_id = Context.Session.GetString("user_id");
}
<div class="card border-dark mb-3" style="max-width: 18rem;">
    <div class="card-header">@Model.Author.UserName</div>
    <div class="card-body">
        <h5 class="card-title">@Model.Title</h5>
        <p class="card-text">@Model.Content</p>
    </div>
</div>

<div class="partialViewContainer" id="partialViewContainer">
</div>

<form id="commentForm" method="post">
    <div class="mb-3">
        <input type="hidden" name="postId" id="postId" value="@Model.Id" />
        <label asp-for="Comment" class="control-label"></label>
        <input type="text" asp-for="Comment" name="comment" id="comment" class="form-control" required />
        <span asp-validation-for="Comment" class="text-danger"></span>
    </div>
    <button id="addCmtBtn" type="button" class="btn btn-primary">Add Comment</button>
</form>

<a asp-controller="User" asp-action="Home">Go Back</a>

<!-- Include validation scripts -->
<partial name="_ValidationScriptsPartial" />
<script>
    $(document).ready(function () {
        // Load comments on page load
        loadComments();

        // Function to load comments
        function loadComments() {
            $.ajax({
                url: '@Url.Action("LoadCommentsPartialView", "User")',
                type: 'GET',
                data: { postId: @Model.Id },
                success: function (response) {
                    $('#partialViewContainer').html(response);
                },
                error: function (xhr, status, error) {
                    console.error('Error loading partial view:', error);
                }
            }); 
        }

        // Use event delegation to handle delete button clicks
        $('#partialViewContainer').on('click', '.delCmtBtn', function (e) {
            e.preventDefault();
            var commentId = $(this).data('id');
            console.log($(this).data);
            $.ajax({
                url: '@Url.Action("DeleteUserComment", "User")',
                type: 'POST',
                data: { id: commentId },
                success: function () {
                    loadComments(); // Reload comments after deletion
                },
                error: function (xhr, status, error) {
                    console.error('Error deleting comment:', error);
                }
            });
        });

        $('#addCmtBtn').on('click', function (e) {
            e.preventDefault(); // Prevent default form submission
            var postId = $('#postId').val();
            var comment = $('#comment').val();

            $.ajax({
                url: '@Url.Action("AddComment", "User")',
                type: 'POST',
                data: {
                    postId: postId,
                    comment: comment
                },
                success: function (response) {
                    $('#comment').val(''); // Clear the input field after success
                    loadComments(); // Reload comments
                },
                error: function (xhr, status, error) {
                    console.error('Error adding comment:', error);
                }
            });
        });
    });

</script>
